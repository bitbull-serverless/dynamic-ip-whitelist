name: Publish SAM Template

on:
  push:
    tags:
      - '*'

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.tag }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.8" # required for SAM CLI

      - uses: aws-actions/setup-sam@v1

      - run: sam build --use-container # use Docker container with Lambda's specific runtime
  
      - uses: actions/upload-artifact@master
        with:
          name: sam
          path: .aws-sam

      - id: version
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}

  load_config:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.json }}
    steps:
      - uses: actions/checkout@v2
      
      - id: matrix
        run: |
          JSON=$(echo $(cat .github/workflows/config.json) | sed 's/ //g' )
          echo "::set-output name=json::$JSON"

  create_release:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.release.outputs.id }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: v${{ github.ref }}
          draft: true
          prerelease: false

  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        config: ${{fromJson(needs.load_config.outputs.matrix)}}
    needs: [build, load_config, create_release]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.8" # required for SAM CLI

      - uses: aws-actions/setup-sam@v1
      
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ matrix.config.region }}

      - uses: actions/download-artifact@master
        with:
          name: sam
          path: .aws-sam

      # deploy latest version
      - run: sam package --s3-bucket ${{ matrix.config.s3bucket }} --s3-prefix ${{ github.event.repository.name }} --output-template-file output-template.yml
      - run: aws s3 cp output-template.yml s3://${{ matrix.config.s3bucket }}/${{ github.event.repository.name }}/template.yml
      
      # deploy version
      - run: sam package --s3-bucket ${{ matrix.config.s3bucket }} --s3-prefix ${{ github.event.repository.name }}/${{ needs.build.outputs.version }}/ --output-template-file output-template.yml
      - run: aws s3 cp output-template.yml s3://${{ matrix.config.s3bucket }}/${{ github.event.repository.name }}/${{ needs.build.outputs.version }}/template.yml

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: output-template.yml
          asset_name: ${{ matrix.config.region }}.yml
          asset_content_type: text/yaml

  publish_release:
    runs-on: ubuntu-latest
    needs: [publish, build, create_release]
    steps:
      - uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ needs.create_release.outputs.id }}
